{"ast":null,"code":"import _defineProperty from\"C:/E/Study/Code/react and restful API . hook tutorial/react-note-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/E/Study/Code/react and restful API . hook tutorial/react-note-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/E/Study/Code/react and restful API . hook tutorial/react-note-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/E/Study/Code/react and restful API . hook tutorial/react-note-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useState,useEffect}from'react';import Header from'./components/Header';import Footer from'./components/Footer';import Sidebar from'./components/Sidebar';import Content from'./components/Content';import{nanoid}from\"nanoid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//const [notes,setNotes]=useState([])\n//inital the app by get item from localstorage, remember to add [], as it cause error when lcalstorage \"notes\" not initialized/defined at first time \nvar _useState=useState(function(){return JSON.parse(localStorage.getItem(\"notes\"))||[];}),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];//make sure notes[0] exist and then fint the id, or use \"\" instead \nvar _useState3=useState(notes[0]&&notes[0].id||\"\"),_useState4=_slicedToArray(_useState3,2),currentNoteId=_useState4[0],setCurrentNoteId=_useState4[1];useEffect(function(){var allNotes=JSON.stringify(notes);localStorage.setItem(\"notes\",allNotes);},[notes]);function createNewNote(){var newNote={id:nanoid(),title:\"new note\",text:\"#Please enter note content here.\",important:false};//use [] , as it is an array\nsetNotes(function(prevState){return[].concat(_toConsumableArray(prevState),[newNote]);});setCurrentNoteId(newNote.id);}function getCurrentNote(){var getCurrentNote=notes.find(function(note){return note.id===currentNoteId;});//if currentNote not exist return notes[0] or \" \", other wise delete note not working propely when deleting the current selected note\nreturn getCurrentNote||\"\";}function updateNote(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value,type=_e$target.type,checked=_e$target.checked;setNotes(function(prevState){var newArray=[];prevState.map(function(note){//use unshift to place newly changed note to the begining of the array\nreturn note.id===currentNoteId?newArray.unshift(_objectSpread(_objectSpread({},note),{},_defineProperty({},name,type!==\"checkbox\"?value:checked))):newArray.push(note);});return newArray;});/*   setNotes(prevState=>\n        prevState.map((note)=> { \n          //do not place newly changed note to the begining of the array\n         return note.id===currentNoteId ? {...note, [name]:type!==\"checkbox\" ? value : checked} :  note\n        }\n         )    \n        )\n */}function deleteNote(event,id){event.stopPropagation();setNotes(function(oldNotes){return oldNotes.filter(function(note){return note.id!==id;});});console.log(id);}/*\n    setNotes(prevState=>\n     prevState.map((note)=>  note.id===currentNoteId ? {...note, text:e.target.value} : note\n      ))\n\n    setNotes(prevState=>\n      prevState.map((note)=> { return note.id===currentNoteId ? {...note, text:e.target.value} : note}\n       ))\n\n    setNotes((prevState)=> {\n     return  prevState.map((note)=> {\n        return note.id===currentNoteId ? {...note, text:e.target.value} : note\n      }) \n   */console.log(currentNoteId);console.log(notes);//<Content getCurrentNote={getCurrentNote()}/>  invoke getCurrentNote() with parenthesis, to executing your function directly and get the return value\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(Header,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar\",children:/*#__PURE__*/_jsx(Sidebar,{notes:notes,getCurrentNote:getCurrentNote(),setCurrentNoteId:setCurrentNoteId,createNewNote:createNewNote,deleteNote:deleteNote})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[\" \",notes.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No notes found!\"}):/*#__PURE__*/_jsx(Content,{getCurrentNote:getCurrentNote(),updateNote:updateNote}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"footer\",children:/*#__PURE__*/_jsx(Footer,{})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Sidebar","Content","nanoid","App","JSON","parse","localStorage","getItem","notes","setNotes","id","currentNoteId","setCurrentNoteId","allNotes","stringify","setItem","createNewNote","newNote","title","text","important","prevState","getCurrentNote","find","note","updateNote","e","target","name","value","type","checked","newArray","map","unshift","push","deleteNote","event","stopPropagation","oldNotes","filter","console","log","length"],"sources":["C:/E/Study/Code/react and restful API . hook tutorial/react-note-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React,{useState,useEffect} from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Sidebar from './components/Sidebar'\nimport Content from './components/Content'\nimport {nanoid} from \"nanoid\"\n\nfunction App() {\n\n   //const [notes,setNotes]=useState([])\n   //inital the app by get item from localstorage, remember to add [], as it cause error when lcalstorage \"notes\" not initialized/defined at first time \n   const [notes,setNotes]=useState(()=>JSON.parse(localStorage.getItem(\"notes\"))|| [])\n   //make sure notes[0] exist and then fint the id, or use \"\" instead \n   const [currentNoteId,setCurrentNoteId]=useState(  (notes[0] && notes[0].id) || \"\")\n   \n   useEffect(()=>{\n    const allNotes = JSON.stringify(notes)\n    localStorage.setItem(\"notes\",allNotes)\n   },[notes])\n\n   function createNewNote(){\n    const newNote={\n      id:nanoid(),\n      title:\"new note\",\n      text:\"#Please enter note content here.\",\n      important:false\n    }\n    //use [] , as it is an array\n    setNotes(prevState=> [...prevState, newNote])\n\n    setCurrentNoteId(newNote.id)\n    \n   }\n\n   function getCurrentNote(){\n    const getCurrentNote = notes.find(note => note.id ===currentNoteId)\n    //if currentNote not exist return notes[0] or \" \", other wise delete note not working propely when deleting the current selected note\n    return getCurrentNote || \"\"\n   }\n\n   function updateNote(e){\n    const {name,value,type,checked}=e.target\n    \n    setNotes(prevState=>{\n      const newArray=[]\n      prevState.map((note)=> { \n        //use unshift to place newly changed note to the begining of the array\n       return note.id===currentNoteId ? newArray.unshift({...note, [name]:type!==\"checkbox\" ? value : checked}) :  newArray.push(note)\n      }\n       )\n       return newArray\n      })\n\n   /*   setNotes(prevState=>\n        prevState.map((note)=> { \n          //do not place newly changed note to the begining of the array\n         return note.id===currentNoteId ? {...note, [name]:type!==\"checkbox\" ? value : checked} :  note\n        }\n         )    \n        )\n */\n }     \n\n  function deleteNote(event,id){\n    event.stopPropagation()\n    setNotes(oldNotes=> oldNotes.filter( note=>note.id !== id))\n    console.log(id)\n  }\n \n   /*\n    setNotes(prevState=>\n     prevState.map((note)=>  note.id===currentNoteId ? {...note, text:e.target.value} : note\n      ))\n\n    setNotes(prevState=>\n      prevState.map((note)=> { return note.id===currentNoteId ? {...note, text:e.target.value} : note}\n       ))\n\n    setNotes((prevState)=> {\n     return  prevState.map((note)=> {\n        return note.id===currentNoteId ? {...note, text:e.target.value} : note\n      }) \n   */\n  \n\n \n console.log(currentNoteId)\n console.log(notes)\n\n//<Content getCurrentNote={getCurrentNote()}/>  invoke getCurrentNote() with parenthesis, to executing your function directly and get the return value\n  return (\n    <div className=\"container\"> \n    <div className=\"header\"><Header/></div>\n     <div className=\"sidebar\"><Sidebar notes={notes} getCurrentNote={getCurrentNote()} setCurrentNoteId={setCurrentNoteId} createNewNote={createNewNote} deleteNote={deleteNote}/></div>\n     <div className=\"content\"> {notes.length===0 ? <p>No notes found!</p> :<Content  getCurrentNote={getCurrentNote()} updateNote={updateNote}/> } </div> \n     <div className=\"footer\"><Footer/></div>\n     </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"inBACA,MAAO,WAAW,CAClB,MAAOA,MAAK,EAAEC,QAAQ,CAACC,SAAS,KAAO,OAAO,CAC9C,MAAOC,OAAM,KAAM,qBAAqB,CACxC,MAAOC,OAAM,KAAM,qBAAqB,CACxC,MAAOC,QAAO,KAAM,sBAAsB,CAC1C,MAAOC,QAAO,KAAM,sBAAsB,CAC1C,OAAQC,MAAM,KAAO,QAAQ,yFAE7B,QAASC,IAAG,EAAG,CAEZ;AACA;AACA,cAAuBP,QAAQ,CAAC,iBAAIQ,KAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAG,EAAE,GAAC,wCAA5EC,KAAK,eAACC,QAAQ,eACrB;AACA,eAAuCb,QAAQ,CAAIY,KAAK,CAAC,CAAC,CAAC,EAAIA,KAAK,CAAC,CAAC,CAAC,CAACE,EAAE,EAAK,EAAE,CAAC,yCAA3EC,aAAa,eAACC,gBAAgB,eAErCf,SAAS,CAAC,UAAI,CACb,GAAMgB,SAAQ,CAAGT,IAAI,CAACU,SAAS,CAACN,KAAK,CAAC,CACtCF,YAAY,CAACS,OAAO,CAAC,OAAO,CAACF,QAAQ,CAAC,CACvC,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC,CAEV,QAASQ,cAAa,EAAE,CACvB,GAAMC,QAAO,CAAC,CACZP,EAAE,CAACR,MAAM,EAAE,CACXgB,KAAK,CAAC,UAAU,CAChBC,IAAI,CAAC,kCAAkC,CACvCC,SAAS,CAAC,KACZ,CAAC,CACD;AACAX,QAAQ,CAAC,SAAAY,SAAS,qCAAOA,SAAS,GAAEJ,OAAO,IAAC,CAAC,CAE7CL,gBAAgB,CAACK,OAAO,CAACP,EAAE,CAAC,CAE7B,CAEA,QAASY,eAAc,EAAE,CACxB,GAAMA,eAAc,CAAGd,KAAK,CAACe,IAAI,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACd,EAAE,GAAIC,aAAa,GAAC,CACnE;AACA,MAAOW,eAAc,EAAI,EAAE,CAC5B,CAEA,QAASG,WAAU,CAACC,CAAC,CAAC,CACrB,cAAgCA,CAAC,CAACC,MAAM,CAAjCC,IAAI,WAAJA,IAAI,CAACC,KAAK,WAALA,KAAK,CAACC,IAAI,WAAJA,IAAI,CAACC,OAAO,WAAPA,OAAO,CAE9BtB,QAAQ,CAAC,SAAAY,SAAS,CAAE,CAClB,GAAMW,SAAQ,CAAC,EAAE,CACjBX,SAAS,CAACY,GAAG,CAAC,SAACT,IAAI,CAAI,CACrB;AACD,MAAOA,KAAI,CAACd,EAAE,GAAGC,aAAa,CAAGqB,QAAQ,CAACE,OAAO,gCAAKV,IAAI,wBAAGI,IAAI,CAAEE,IAAI,GAAG,UAAU,CAAGD,KAAK,CAAGE,OAAO,GAAE,CAAIC,QAAQ,CAACG,IAAI,CAACX,IAAI,CAAC,CAChI,CAAC,CACC,CACD,MAAOQ,SAAQ,CAChB,CAAC,CAAC,CAEL;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GACC,CAEC,QAASI,WAAU,CAACC,KAAK,CAAC3B,EAAE,CAAC,CAC3B2B,KAAK,CAACC,eAAe,EAAE,CACvB7B,QAAQ,CAAC,SAAA8B,QAAQ,QAAGA,SAAQ,CAACC,MAAM,CAAE,SAAAhB,IAAI,QAAEA,KAAI,CAACd,EAAE,GAAKA,EAAE,GAAC,GAAC,CAC3D+B,OAAO,CAACC,GAAG,CAAChC,EAAE,CAAC,CACjB,CAEC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAIC+B,OAAO,CAACC,GAAG,CAAC/B,aAAa,CAAC,CAC1B8B,OAAO,CAACC,GAAG,CAAClC,KAAK,CAAC,CAEnB;AACE,mBACE,aAAK,SAAS,CAAC,WAAW,wBAC1B,YAAK,SAAS,CAAC,QAAQ,uBAAC,KAAC,MAAM,IAAE,EAAM,cACtC,YAAK,SAAS,CAAC,SAAS,uBAAC,KAAC,OAAO,EAAC,KAAK,CAAEA,KAAM,CAAC,cAAc,CAAEc,cAAc,EAAG,CAAC,gBAAgB,CAAEV,gBAAiB,CAAC,aAAa,CAAEI,aAAc,CAAC,UAAU,CAAEoB,UAAW,EAAE,EAAM,cACnL,aAAK,SAAS,CAAC,SAAS,WAAC,GAAC,CAAC5B,KAAK,CAACmC,MAAM,GAAG,CAAC,cAAG,mBAAG,iBAAe,EAAI,cAAE,KAAC,OAAO,EAAE,cAAc,CAAErB,cAAc,EAAG,CAAC,UAAU,CAAEG,UAAW,EAAE,CAAE,GAAC,GAAM,cACpJ,YAAK,SAAS,CAAC,QAAQ,uBAAC,KAAC,MAAM,IAAE,EAAM,GACjC,CAGX,CAEA,cAAetB,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}